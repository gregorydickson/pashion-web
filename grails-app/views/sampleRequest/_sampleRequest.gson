import pashion.SampleRequest


model {  
    SampleRequest sampleRequest
}
log.info "render a sample request"

json g.render(sampleRequest,[expand:['searchableItemsStatus','searchableItemsProposed','searchableItems','returnToAddress','shippingOut','shippingReturn','addressDestination'],excludes:['brand','shippingOut','shippingReturn','requestingUser','deliverTo']]){
	
	pickupDate sampleRequest.pickupDate?.format('dd-MMM-yyyy')
	pickupTime sampleRequest.pickupTime
	pickupDateReturn sampleRequest.pickupDateReturn?.format('dd-MMM-yyyy')
	pickupTimeReturn sampleRequest.pickupTimeReturn
	brand{
		name sampleRequest.brand.name
		id sampleRequest.brand.id
	}
	pressHouse{
		name sampleRequest.pressHouse?.name
		id sampleRequest.pressHouse?.id
	}
	shippingOut{
		status sampleRequest.shippingOut.status
		courier sampleRequest.shippingOut.courier
		stuartJobId sampleRequest.shippingOut.stuartJobId
		startDate sampleRequest.shippingOut.startDate?.format('yyyy-MMM-dd HH:mm')
		endDate sampleRequest.shippingOut.endDate?.format('yyyy-MMM-dd HH:mm')
	}
	shippingReturn{
		status sampleRequest.shippingReturn.status
		courier sampleRequest.shippingReturn.courier
		stuartJobId sampleRequest.shippingReturn.stuartJobId
		startDate sampleRequest.shippingReturn.startDate?.format('yyyy-MMM-dd HH:mm')
		endDate sampleRequest.shippingReturn.endDate?.format('yyyy-MMM-dd HH:mm')
	}
	requestingUser{
		id sampleRequest.requestingUser?.id
		name sampleRequest.requestingUser?.name
		surname sampleRequest.requestingUser?.surname
	}
	deliverTo{
		id sampleRequest.deliverTo?.id
		name sampleRequest.deliverTo?.name
		surname sampleRequest.deliverTo?.surname
	}

}